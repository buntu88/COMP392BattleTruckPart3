{"version":3,"sources":["scenes/over.ts"],"names":[],"mappings":"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","file":"scenes/over.js","sourcesContent":["/**\n * @module scenes\n */\n\n//File name:            Over\n//Authorâ€™s name:        Vishal Guleria (300813391), Vinay Bhardwaj (300825097) and Jagpreet Jattana\n//Date last Modified    April 8,2016\n//Program description   Group Project - Battle Truck\n//Revision History      Part 2\n\nmodule scenes {\n    /**\n     * This class instantiates the game over scene object\n     * \n     * @class Over\n     * @extends scenes.Scene\n     */\n    export class Over extends scenes.Scene {\n        private _blocker: HTMLElement;\n        private _stage: createjs.Stage;\n        private _gameOverLabel: createjs.Text;\n        private _scoreLabel: createjs.Text;\n        private _highScoreLabel: createjs.Text;\n        private _restartButton: createjs.Bitmap;\n        \n        private spotLight: SpotLight;\n        \n        private groundGeometry: CubeGeometry;\n        private groundPhysicsMaterial: Physijs.Material;\n        private groundMaterial: PhongMaterial;\n        private ground: Physijs.Mesh;\n        private groundTexture: Texture;\n        private groundTextureNormal: Texture;\n        \n        private coinGeometry: Geometry;\n        private coinMaterial: Physijs.Material;\n        private coins: Physijs.ConcaveMesh[];\n        private coinCount: number;\n        \n        /**\n         * Empty Contructor\n         * \n         * @constructor\n         */\n        constructor() {\n            super();\n\n            this._initialize();\n            this.start();\n        }\n\n        /**\n         * Sets up a reference to the canvas HTML Element\n         * \n         * @method _setupCanvas\n         * @return void\n         */\n        private _setupCanvas(): void {\n            canvas.style.width = \"100%\";\n            canvas.setAttribute(\"height\", config.Screen.HEIGHT.toString());\n            canvas.style.backgroundColor = \"#000000\";\n            canvas.style.opacity = \"0.8\";\n            canvas.style.position = \"absolute\";\n        }\n\n        /**\n         * This method sets up default values for class member variables\n         * and objects\n         * \n         * @method _initialize\n         * @return void\n         */\n        private _initialize(): void {\n            // Create to HTMLElements\n            this._blocker = document.getElementById(\"blocker\");\n            this._blocker.style.display = \"none\";\n\n            // setup canvas for menu scene\n            this._setupCanvas();\n            // setup a stage on the canvas\n            this._stage = new createjs.Stage(canvas);\n            this._stage.enableMouseOver(20);\n            \n            this.coinCount = 20;\n        }\n\n        /**\n         * Add a spotLight to the scene\n         * \n         * @method addSpotLight\n         * @return void\n         */\n        private addSpotLight(): void {\n            // Spot Light\n            this.spotLight = new SpotLight(0xffffff);\n            this.spotLight.position.set(20, 40, -15);\n            this.spotLight.castShadow = true;\n            this.spotLight.intensity = 2;\n            this.spotLight.lookAt(new Vector3(0, 0, 0));\n            this.spotLight.shadowCameraNear = 2;\n            this.spotLight.shadowCameraFar = 200;\n            this.spotLight.shadowCameraLeft = -5;\n            this.spotLight.shadowCameraRight = 5;\n            this.spotLight.shadowCameraTop = 5;\n            this.spotLight.shadowCameraBottom = -5;\n            this.spotLight.shadowMapWidth = 2048;\n            this.spotLight.shadowMapHeight = 2048;\n            this.spotLight.shadowDarkness = 0.5;\n            this.spotLight.name = \"Spot Light\";\n            this.add(this.spotLight);\n            console.log(\"Added spotLight to scene\");\n        }\n\n        /**\n         * Add a ground plane to the scene\n         * \n         * @method addGround\n         * @return void\n         */\n        private addGround(): void {\n            this.groundTexture = new THREE.TextureLoader().load('../../Assets/images/GravelCobble.jpg');\n            this.groundTexture.wrapS = THREE.RepeatWrapping;\n            this.groundTexture.wrapT = THREE.RepeatWrapping;\n            this.groundTexture.repeat.set(8, 8);\n\n            this.groundTextureNormal = new THREE.TextureLoader().load('../../Assets/images/GravelCobbleNormal.png');\n            this.groundTextureNormal.wrapS = THREE.RepeatWrapping;\n            this.groundTextureNormal.wrapT = THREE.RepeatWrapping;\n            this.groundTextureNormal.repeat.set(8, 8);\n\n            this.groundMaterial = new PhongMaterial();\n            this.groundMaterial.map = this.groundTexture;\n            this.groundMaterial.bumpMap = this.groundTextureNormal;\n            this.groundMaterial.bumpScale = 0.2;\n\n            this.groundGeometry = new BoxGeometry(32, 1, 32);\n            this.groundPhysicsMaterial = Physijs.createMaterial(this.groundMaterial, 0, 0);\n            this.ground = new Physijs.ConvexMesh(this.groundGeometry, this.groundPhysicsMaterial, 0);\n            this.ground.receiveShadow = true;\n            this.ground.name = \"Ground\";\n            this.add(this.ground);\n            console.log(\"Added Ground to scene\");\n        }\n        \n        // /**\n        //  * This method adds a coin to the scene\n        //  * \n        //  * @method addCoinMesh\n        //  * @return void\n        //  */\n        // private addCoinMesh(): void {\n        //     var self = this;\n\n        //     this.coins = new Array<Physijs.ConvexMesh>(); // Instantiate a convex mesh array\n\n        //     var coinLoader = new THREE.JSONLoader().load(\"../../Assets/imported/coin.json\", function(geometry: THREE.Geometry) {\n        //         var phongMaterial = new PhongMaterial({ color: 0xE7AB32 });\n        //         phongMaterial.emissive = new THREE.Color(0xE7AB32);\n\n        //         var coinMaterial = Physijs.createMaterial((phongMaterial), 0.4, 0.6);\n\n        //         for (var count: number = 0; count < self.coinCount; count++) {\n        //             self.coins[count] = new Physijs.ConvexMesh(geometry, coinMaterial);\n        //             self.coins[count].receiveShadow = true;\n        //             self.coins[count].castShadow = true;\n        //             self.coins[count].name = \"Coin\";\n        //             self.setCoinPosition(self.coins[count]);\n        //             console.log(\"Added Coin \" + count + \" to the Scene\");\n        //         }\n        //     });\n        // }\n        \n        // /**\n        //  * This method randomly sets the coin object's position\n        //  * \n        //  * @method setCoinPosition\n        //  * @return void\n        //  */\n        // private setCoinPosition(coin: Physijs.ConvexMesh): void {\n        //     var randomPointX: number = Math.floor(Math.random() * 20) - 10;\n        //     var randomPointY: number = Math.floor(Math.random() * 30) + 1;\n        //     var randomPointZ: number = Math.floor(Math.random() * 20) - 10;\n        //     coin.position.set(randomPointX, randomPointY, randomPointZ);\n        //     this.add(coin);\n        // }\n\n        // PUBLIC METHODS +++++++++++++++++++++++++++++++++++++++++\n\n        /**\n         * The start method is the main method for the scene class\n         * \n         * @method start\n         * @return void\n         */\n        public start(): void {\n            // Scene changes for Physijs\n            this.name = \"Game Over Scene\";\n            this.fog = new THREE.Fog(0xffffff, 0, 750);\n            this.setGravity(new THREE.Vector3(0, -10, 0));\n            var self = this;\n            \n                        createjs.Sound.stop();\n            createjs.Sound.play(\"gameOver\");\n            \n            //check for high score changes\n            if(scoreValue > highScoreValue) {\n                highScoreValue = scoreValue;\n            }\n            \n            this._gameOverLabel = new createjs.Text(\n                \"GAME OVER\",\n                \"80px Algerian\",\n                \"#ffffff\");\n            this._gameOverLabel.regX = this._gameOverLabel.getMeasuredWidth() * 0.5;\n            this._gameOverLabel.regY = this._gameOverLabel.getMeasuredLineHeight() * 0.5;\n            this._gameOverLabel.x = config.Screen.WIDTH * 0.5;\n            this._gameOverLabel.y = (config.Screen.HEIGHT * 0.5) - 100;\n            this._stage.addChild(this._gameOverLabel);\n            \n            this._scoreLabel = new createjs.Text(\n                \"Your Score: \" + scoreValue,\n                \"40px Algerian\",\n                \"#ffffff\");\n            this._scoreLabel.regX = this._scoreLabel.getMeasuredWidth() * 0.5;\n            this._scoreLabel.regY = this._scoreLabel.getMeasuredLineHeight() * 0.5;\n            this._scoreLabel.x = config.Screen.WIDTH * 0.5;\n            this._scoreLabel.y = config.Screen.HEIGHT * 0.5;\n            this._stage.addChild(this._scoreLabel);\n            \n            this._highScoreLabel = new createjs.Text(\n                \"High Score: \" + highScoreValue,\n                \"40px Algerian\",\n                \"#ffffff\");\n            this._highScoreLabel.regX = this._highScoreLabel.getMeasuredWidth() * 0.5;\n            this._highScoreLabel.regY = this._highScoreLabel.getMeasuredLineHeight() * 0.5;\n            this._highScoreLabel.x = config.Screen.WIDTH * 0.5;\n            this._highScoreLabel.y = (config.Screen.HEIGHT * 0.5) + 50;\n            this._stage.addChild(this._highScoreLabel);\n\n            this._restartButton = new createjs.Bitmap(assets.getResult(\"PlayAgainButton\"));\n            this._restartButton.regX = this._restartButton.getBounds().width * 0.5;\n            this._restartButton.regY = this._restartButton.getBounds().height * 0.5;\n            this._restartButton.x = config.Screen.WIDTH * 0.5;\n            this._restartButton.y = (config.Screen.HEIGHT * 0.5) + 150;\n            this._stage.addChild(this._restartButton);\n\n            this._restartButton.on(\"mouseover\", (event: createjs.MouseEvent) => {\n                event.target.alpha = 0.7;\n            });\n\n            this._restartButton.on(\"mouseout\", (event: createjs.MouseEvent) => {\n                event.target.alpha = 1.0;\n            });\n\n            this._restartButton.on(\"click\", (event: createjs.MouseEvent) => {\n                currentScene = config.Scene.PLAY1;\n                changeScene();\n            });\n            \n            // Add Spot Light to the scene\n            this.addSpotLight();\n\n            // Ground Object\n            this.addGround();\n            \n            // // // Add custom coin imported from Blender\n            // // this.addCoinMesh();\n            \n            // this.ground.addEventListener('collision', function(eventObject){\n            //     if (eventObject.name === \"Coin\") {\n            //         var coinSound: createjs.AbstractSoundInstance = createjs.Sound.play(\"coin\");\n            //         coinSound.volume = 0.1;\n                    \n            //         self.remove(eventObject);\n            //         self.setCoinPosition(eventObject);\n            //     }\n            // });\n            \n            camera.position.set(0, 10, -20);\n            camera.lookAt(new Vector3(0, 0, 0));  \n        }\n\n        /**\n         * The update method updates the animation loop and other objects\n         * \n         * @method update\n         * @return void\n         */\n        public update(): void {\n            //  this.coins.forEach(coin => {\n            //     coin.setAngularFactor(new Vector3(0, 0, 0));\n            //     coin.setAngularVelocity(new Vector3(0, 1, 0));\n            // });\n            \n            this._stage.update();\n            \n            this.simulate();\n        }\n\n        /**\n         * The resize method is a procedure that sets variables and objects on screen resize\n         * \n         * @method resize\n         * @return void\n         */\n        public resize(): void {\n            this._setupCanvas();\n        }\n\n    }\n}"],"sourceRoot":"/source/"}